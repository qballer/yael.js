Yael Todo:
	
Learn how to write a pluging with flatiron/Broadway

Design Divider API.
Prepare buffer support 
Write a simple test unit.
Desgin Assmbler API and result aggrigation. 
Write a simple test unit.
Desgin Algorithm API
Write a simple test unit.
perform api loading.
Write a workflow mechanisem to perform basic operations.
	Support stop/start
	multi algorithm ready (?)	
Write a simple test for it. 	
Bind mechanizem to running the API.
Run previouse test.
Binde to couche DB.


generic que consumption.

Mechanizm layout:
Create a mulity que executaion model based on the pile design pattern and the numbered call back.
Create a generic mechanism to run minimum to maximum ratio between ques. 

Important links: 
http://nodebits.org/distilled-patterns
http://blog.mixu.net/2011/02/02/essential-node-js-patterns-and-snippets/
http://howtonode.org/control-flow
http://caolanmcmahon.com/posts/writing_for_node_and_the_browser/

Run Time mechanizm:

Serving new clients.
	- Giving them client.js - Static 
	- Giving them Adming.js - Static 

I'm createing slices.
	- Write it to a db. 
	- Given slice to Client. 	

Getting Results.
	-Write to DB. 
	-Feeding the assmebler. 

Serving final result.
	- Batch Time - No algorithm is running. 
			
Uploading ALgorithm  (There is no algorithm running)
	- Validate plugin
	- create browser unit. 
	- Route URL.
	- Route slice serving 
	- Route result aggrigation 

Real Time pile: 
	- Give Page - Just Serv.(Client or Admin).
	- Get Slice : Do I have one handy? Serv : Create and Serv.
	- Get Result: Write it to DB, add to batch loading. 

Batch Time piles : 
	- Agrigrate Result. Read From DB.  
	- Create Slice if a pile isn't marked as done.
	- 


